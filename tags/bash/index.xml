<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>bash on Jonathan Loscalzo</title><link>https://jonathanloscalzo.github.io/tags/bash/</link><description>Recent content in bash on Jonathan Loscalzo</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Fri, 21 May 2021 12:09:46 -0300</lastBuildDate><atom:link href="https://jonathanloscalzo.github.io/tags/bash/index.xml" rel="self" type="application/rss+xml"/><item><title>Some Bash/unix helpful commands</title><link>https://jonathanloscalzo.github.io/2021/05/some-bash/unix-helpful-commands/</link><pubDate>Fri, 21 May 2021 12:09:46 -0300</pubDate><guid>https://jonathanloscalzo.github.io/2021/05/some-bash/unix-helpful-commands/</guid><description>Bash/Unix Commands AWESOME CHEATSHEETS, BASH Devhit - bash Hostinger - Linux Commands Guru99 - Linux cheathsheet ls ls -a # hidden files ls -la # large list, more information ls -lah # size in kb ls -R # list recursively In .bashrc:
alias ll = &amp;#34;ls -lahF&amp;#34; rsync Rsync - wikipedia Linux Techie - Rsync Hostinger - Rsync rsync file dest/ rsync dir/* dest/ rsync -a dir/ dest/ # file mode rsync -av dir/ dest/ # verbose rsync -azv dir/ dest/ # compress during transfering rsync -av --dry-run dir/ dest/ # execution without result, only to evaluate output.</description></item><item><title>Bash commands to execute tasks on background</title><link>https://jonathanloscalzo.github.io/2021/04/bash-commands-to-execute-tasks-on-background/</link><pubDate>Tue, 20 Apr 2021 23:54:03 -0300</pubDate><guid>https://jonathanloscalzo.github.io/2021/04/bash-commands-to-execute-tasks-on-background/</guid><description>Process start in the background, but it is still connected with the terminal (if you close the terminal, the process will be terminated)
&amp;lt;command&amp;gt; &amp;amp; Actually, above command continues printing on the shell&amp;hellip; To avoid that behavior, we could redirect the standard output
&amp;lt;command&amp;gt; &amp;amp;&amp;gt;/dev/null &amp;amp; # it is redirecting both, STDOUT and STDERR to /dev/null Remember, we could also use streams =&amp;gt; STDIN, STDOUT &amp;amp; STDERR (0, 1 &amp;amp; 2)</description></item></channel></rss>